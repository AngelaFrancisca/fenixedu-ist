package pt.ist.fenixedu.domain;

enum pt.ist.fenixedu.domain.SapRequestType  as  SapRequestType;

class SapRoot {
	Long sapDocumentNumber;
	Integer openYear;
	boolean allowCommunication;
}

class SapRequest {
	String documentNumber;
	String sapDocumentNumber;
	String clientId;
	String creditId;
	Money value;
	SapRequestType requestType;
	DateTime whenSent;
	DateTime whenCreated;
	Money advancement;
	boolean sent;
	boolean integrated;
	String integrationMessage;
	String request;
	Integer order;
	boolean ignore;
	RefundState refundState;
	LocalDate refundStateDate;
}

class SapDocumentFile extends .org.fenixedu.bennu.io.domain.GenericFile {
}

class ExternalClient {
    String accountId;
    String companyName;
    String clientId;
    String country;
    String street;
    String city;
    String region;
    String postalCode;
    String vatNumber;
    String fiscalCountry;
    String nationality;
    Integer billingIndicator;
}

class documents.FinancialDocumentFile extends .org.fenixedu.bennu.io.domain.GenericFile {
}

class documents.FinancialDocument {
    String documentType;
    String documentNumber;
    Money value;
}


relation SapRequestSapRequestAnnulled {
	SapRequest playsRole originalRequest {
	    multiplicity 0..1;
    }
    SapRequest playsRole anulledRequest {
	    multiplicity 0..1;
    }
}
      
relation SapRequestEvent {
	SapRequest playsRole sapRequest {
	    multiplicity *;
    }
    .org.fenixedu.academic.domain.accounting.Event playsRole event {
    	multiplicity 1..1;
    }
}
       
relation SapRequestPayment {
	SapRequest playsRole sapRequest {
	    multiplicity *;
    }
    .org.fenixedu.academic.domain.accounting.AccountingTransaction playsRole payment {
    	multiplicity 0..1;
    }   
}       
        
relation SapRequestSapDocumentFile {
	SapRequest playsRole sapRequest {
	    multiplicity 0..1;
    }
    SapDocumentFile playsRole sapDocumentFile {
    	multiplicity 0..1;
    }	
}

relation SapRequestAllSapDocumentFile {
	SapRequest playsRole sapRequestFromAll {
	    multiplicity 1..1;
    }
    SapDocumentFile playsRole allSapDocumentFile {
    	multiplicity *;
    }
}

relation SapRootBennu {
    SapRoot playsRole sapRoot {
        multiplicity 0..1;
    }
    .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
}

relation SapRootExternalClient {
    SapRoot playsRole sapRoot {
        multiplicity 1..1;
    }
    ExternalClient playsRole externalClient {
        multiplicity *;
    }
}

relation SapRootEventToSkipEnrolmentBlockCheck {
    SapRoot playsRole sapRoot {
        multiplicity 0..1;
    }
    .org.fenixedu.academic.domain.accounting.Event playsRole eventToSkipEnrolmentBlockCheck {
        multiplicity *;
    }
}

relation SapRootSapRequest {
    SapRoot playsRole sapRoot {
        multiplicity 1..1;
    }
    SapRequest playsRole sapRequest {
        multiplicity *;
    }
}

relation PaymentMethodDefaultInternal {
    .org.fenixedu.bennu.core.domain.Bennu playsRole internalBennu {
        multiplicity 0..1;
    }
    .org.fenixedu.academic.domain.accounting.PaymentMethod playsRole internalPaymentMethod {
        multiplicity 0..1;
    }
}

relation RefundExternalClient {
    .org.fenixedu.academic.domain.accounting.Refund playsRole refund {
        multiplicity *;
    }
    ExternalClient playsRole externalClient {
        multiplicity 0..1;
    }
}

relation SapRequestReimbursementAdvancement {
	SapRequest playsRole reimbursementRequest {
	    multiplicity 0..1;
    }
    SapRequest playsRole advancementRequest {
	    multiplicity 0..1;
    }
}

relation SapRequestRefund {
	SapRequest playsRole sapRequest {
	    multiplicity *;
    }
    .org.fenixedu.academic.domain.accounting.Refund playsRole refund {
    	multiplicity 0..1;
    }
}

relation SapRootConsolidatedSapRequest {
    SapRoot playsRole sapRootFromConsolidated {
        multiplicity 0..1;
    }
    SapRequest playsRole consolidatedSapRequest {
        multiplicity *;
    }
}

relation EventFinancialDocument {
    .org.fenixedu.academic.domain.accounting.Event playsRole event {
        multiplicity 1..1;
    }
    documents.FinancialDocument playsRole financialDocument {
        multiplicity *;
    }
}

relation FinancialDocumentFinancialDocumentFile {
    documents.FinancialDocumentFile playsRole financialDocumentFile {
        multiplicity 1..1;
    }
    documents.FinancialDocument playsRole financialDocument {
        multiplicity 1..1;
    }
}
